<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v12.1" name="DevExpress.Utils.v12.1, Version=12.1.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v12.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMi4xLCBWZXJzaW9uPTEyLjEu
        NS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAFwFAAACvgIAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAJgSURBVDhPtZJdSFNhGMedU8ubIAhaX3Q7iFoQ7L7AYDde
        tC7sojuhkJKVmomLFCkorK6ym7KIahiTlFajGAVldjXJrW3Mmca+v5yubWdfZ+ff85yzEtPbHvjxHg7v
        //ee93lOw/8oFaEmmohmooXYRmwnWuvPvGfLUt2zLYhfA2twB3NYSghIrJWRLVZRrtbAdftNELSPD9hU
        qruvF8QK7XNReJHCMQqvClUU6WVNAiTi5vQyC/jrNpTq4sNv6H7kgumxG4G4gMhqGZlCFUK5BpGkIoWZ
        4cnFrQXnxpyY+5mDPyYgvFJGOl9FvlRDWQT4q/gGjHnCv1kgX65ex0Za5FVnbsKvoogSCRhZRPQ/97KA
        m7tePdbTuPzSKAePXm+W18MDjUhlS6AWgHoIoSJRLySYxl0s4Ek0Eso05ES9jpjV8nqoX4VopoApVxJ9
        ljD8fv8GOkadLOKxyqVu65nA21kv7DPfYfs0j5n5H0jlK+h9EcKF8fWgz+eDKIq45EizYKcSJ0H7kAPJ
        goQUkc5LWBEkZIjuJ0votSzD6/XC4/HA7XajVCqhyx5jwS4lTl01XHtPAsikBCBNpPI1dD7wYXAqjCuE
        6VUYXdYgzk8G0TkdYsFuJU5dPTlgRywPxIkEwaJETsSZO3N45hFw35nFrdk0bnxOYvhjHGet8g+1R4mT
        4ESfDZEcECViBIsiWRHtI18wRmGj0QiDwYChD1Ho9Xp0WAIs2K/ElZFwQ9jI7CX2EQePX3VglE7W6XTQ
        arUYfBeCRqPBqafy/8D7/hbP9F9YvIPgu/6RHqhDzw2tvwGAV/uxySZdowAAAABJRU5ErkJggpYCAACJ
        UE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA68
        AAAOvAGVvHJJAAACOElEQVQ4T22TTUgUYRjHNzMRK7EIIqkOfVwijMAuXjwEHbxEx0Ap2DoYbEGYkAcJ
        rRQNT6IdMiQr3LJdieoURnsJahEMLdPdzVo/2tnN3dnP2dmd/fc8M++4o+0ffvO+7/D+nmeYece2Jdu2
        UGZhuwVe/5ey/ne/0fPmF+6/XsLdyQC63H7cmfCh07mIjvEfuP18Hu1Pv6Nt7BtoPxfalHJQCgxdNEGe
        0YCcQM0DNx5/5QI7DK2YChatAo8qkSWJUYhMDmh9OM0FKgytmEpTZIk7bYgksZhmVMA++LlkgapS3XSR
        pBSRFLQMfOIClYZWzK5S3Uyxa9CJR64prMppuKa+4PLN7jFyyg3VSLUpWrslssBbzwwWgiGa5xHP5iBT
        F69/BRear14Xrp4aU2QpziiAnAFu9Y3SeynQe9HoCTWEkwr8kQTOX7QvC1fPXpZkkmJElFgnmekbcYtP
        W4CUyJAcx4Ik40zjuRXh6tkXo81RIf1NAxFiVc6hZ3gc076gLi6SOB+K4b13FrWHj7YJVz+2+1lkiQmn
        gGBUxb0hJzzeOTRf68Dws1eYWQ6jd2iE5GMucjYOExc4ECZRIjGUBJYiCtwPHIivTaLubAtqTjRh4sMc
        XhL1V0b5M1brpggXqA2R/Idkn5TBi147UtIT/PzoQGfTQXhm1xBY1xCIFtDgcHGBnbppSRVxiDhCnE5H
        BhDwXEJ74x6F1qeIk0SdmPOeTWfAjPkbM8db63erNPKJs943odhs/wCmmic2nUl/fwAAAABJRU5ErkJg
        ggs=
</value>
  </data>
</root>